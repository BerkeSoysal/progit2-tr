[[ch10-git-internals]]
== Git Kısımları

Daha önceki bir bölümden bu bölüme geçebilirdiniz ya da kitabın tümünü bu noktaya kadar sırayla okuduktan sonra buraya gelmiş olabilirsiniz - her iki durumda da, burada iç işleyişleri ve Git'in uygulanmasını uygulayacağız.
Bu bilgiden şunu anlıyoruz, Git'in ne kadar yararlı ve güçlü olduğunu takdir etmek için temelde önemli olduğunu, ancak başkaları bize bunun yeni başlayanlar için kafa karıştırıcı ve gereksiz yere karmaşık olabileceğini savundu.
Bu nedenle, bu tartışmayı kitaptaki son bölüm yaptık, böylece öğrenme sürecinizde onu önce veya sonraki bölümlerde okuyabilirsiniz.
Karar vermeyi size bırakıyoruz.
Şimdi buradasınız, haydi başlayalım.
İlk olarak, henüz net değilse, Git temel olarak, üzerine yazılmış bir VCS kullanıcı arabirimine sahip bir içerik adresli dosya sistemidir.
Bir parça da olsa ne anlama geldiğini öğreneceksiniz.

Git'in başlangıcında (çoğunlukla 1.5 öncesi), kullanıcı arayüzü çok daha karmaşıktı çünkü cilalı bir VCS yerine bu dosya sistemini vurguladı.
Son birkaç yılda kullanıcı arayüzü, orada bulunan herhangi bir sistem kadar temiz ve kullanımı kolay hale gelinceye kadar arıtıldı; Bununla birlikte, stereotip, öğrenmek zor ve karmaşık olan erken Git kullanıcı arayüzü hakkında durmaktadır.
İçerik adresli dosya sistemi katmanı inanılmaz derecede harika, bu nedenle bu bölümde ilk önce bu konuyu ele alacağız; Daha sonra taşıma mekanizmalarını ve sonunda uğraşmanız gereken depo bakım görevlerini öğreneceksiniz.

include::book/10-git-internals/sections/plumbing-porcelain.asc[]

include::book/10-git-internals/sections/objects.asc[]

include::book/10-git-internals/sections/refs.asc[]

include::book/10-git-internals/sections/packfiles.asc[]

include::book/10-git-internals/sections/refspec.asc[]

include::book/10-git-internals/sections/transfer-protocols.asc[]

include::book/10-git-internals/sections/maintenance.asc[]

include::book/10-git-internals/sections/environment.asc[]

=== Özet

Bu noktada, Git'in arka planda ne yaptığını ve bir dereceye kadar nasıl uygulandığını oldukça iyi anlamış olmalısınız.
Bu bölüm, bir dizi sıhhi tesisat komutunu kapsıyor - kitapların geri kalanında öğrendiğiniz porselen komutlardan daha basit ve daha basit olan komutlar.
Git'in daha düşük bir seviyede nasıl çalıştığını anlamalı, neyi neden yaptığını daha kolay anlaşılmasını sağlamalı ve sizin özel iş akışınızı gerçekleştirmek için kendi araçlarınızı ve yardımcı komut dosyalarınızı yazmalıdır.

İçerik adresli bir dosya sistemi olan Git, yalnızca bir VCS'den daha kolay bir şekilde kullanabileceğiniz çok güçlü bir araçtır.
Umarız bu teknolojinin kendi harika uygulamanızı uygulamak için Git internals hakkındaki yeni bilginizi kullanabilir ve Git'i daha gelişmiş yollarla daha rahat uygulayabilirsiniz.
